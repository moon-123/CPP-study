정수형 리터럴 상수의 타입

    모두 int형
    아래 경우를 빼고

    1. 데이터가 너무 커서 int형으로 저장할 수 없는 경우
    2. 정수형 상수에 접미사를 사용하여 해당 상수의 타입을 직접 명시하는 경우

    기본: int
    u, U: unsigned int
    l, L: long
    ul, uL, Ul, UL: unsigned long
    long long, u11, U11, uLL, ULL unsigned long long


실수형 리터럴 상수의 타입

    모두 부동 소수점 방식으로 저장 double

    1. 직접 명시하는 경우

    f, F: float
    기본: double
    l, L: long double


포인터 리터럴 상수

    널 포인터란 아무것도 가리키고 있지 않은 포인터
    nullptr 키워드 사용

    정수형으로 변환 불가

    nullptr == 0


이진 리터럴 상수

    0B 0b 접두사 사용

심볼릭 상수

    변수와 마찬가지로 이름을 가진 상수
    선언과 동시에 반드시 초기화
    매크로, const 이용
    가급적이면 const 사용

    const 장점이 있음
        - 상수의 타입을 명시적으로 지정
        - 구조체와 같은 복잡한 사용자 정의 타입에 사용
        - 해당 심볼릭 상수를 특정 함수나 파일에서만 사용할 수 있도록 제한 가능
        