배열
    같은 타입의 변수들로 이루어진 유한 집합으로 정의할 수 있습니다.
    요소, 인덱스
    인덱스는 0부터 시작

    1차원, 2차원, 다차원
    2차원까지가 자주 사용됨


배열 선언
    타입 배열이름[배열길이];

    타입에는 배열 요소 타입
    배열 접근을 위한 이름
    몇 개의 배열 요소를 가지게 되는지 명시

    초기화하지 않으면 모든 배열 요소가 쓰레깃값으로 채워진다.


배열 길이 자동 설정
    타입 배열이름[] = {배열요소1, 배열요소2, ...};
    int arr[] = {1, 2, 3};

배열의 특징
    1. 길이는 반드시 상수로 선언
    2. 인덱스는 언제나 0부터
    3. 컴파일러는 배열의 길이를 전혀 신경 쓰지 않는다

배열이 차지하는 메모리의 크기
    배열이 차지하는 총 메모리의 크기
    배열의 길이 x sizeof(타입)

    배열의 길이
    sizeof(배열이름) / sizeof(배열이름[0])

C++11에서의 배열 초기화
    1. 연산자(=)를 사용하지 않아도 된다.
    2. 값을 명시하지 않고 괄호({})만으로 0으로 초기화할 수 있음
    3. 초기화 리스트를 사용하여 배열을 초기화할 경우에는 narrowing cast를 할 수 없다.
    4. array 템플릿 클래스가 추가됨

narrowing cast
    이전 버전의 C++에서 발생하던 수많은 호환성 문제를 C++11에서는 초기화 리스트를 사용하여 방지할 수 있다.
    C++11에서는 초기화 리스트를 사용하여 변수나 배열을 초기화할 경우에 narrowing cast를 허용하지 않는다
    따라서 초기화 리스트를 이용한 초기화에서 narrowing cast가 발생하면, 경고를 발생시킨다.

    narrowing cast는 암시적인 데이터 손실을 의미함

    int var = 3.14; 와 같이

    초기화 리스트를 사용하면 이를 허용하지 않고 경고를 유발할 수 있음

    int var = {3.14};

    